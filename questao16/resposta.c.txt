#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <time.h>


int sort(const void *num, const void *num_) {
    return ( *(float*)num - *(float*) num_);
}

float equate(float a, float b) {
    return (a - b);
}


void Mysort(float *vetor, int num, float (*funcao)(float, float)){
    int aux;

    for(int i = 0; i < num; i++){
        for(int j = 0; j < num - 1; j++){
            if(funcao(vetor[j], vetor[j+1])>0){
                aux = vetor[j];
                vetor[j] = vetor[j+1];
                vetor[j+1] = aux;
            }
        }
    }
}

void seed(float *vetor, int n){
    for(int i = 0; i < n; i++){
        vetor[i] = rand()%100;
    }
}

void print(float *vetor, int n){
    for(int i = 0; i < n; i++){
        printf(" %.2f ", vetor[i]);
    }
    printf("\n");
}

int main(){
    int n = 100;
    float *vetor;

    vetor = malloc(n * sizeof(float));

    seed(vetor, n);

    clock_t begin;
    clock_t end;


    printf("Este eh o vetor nao ordenado : \n");
    print(vetor, n);
    printf("\n");
    begin = clock();
    for(int i =0; i<50000;i++){
        Mysort(vetor, n, equate);
    }

    end = clock();

    printf("Este eh o vetor ordenado por My sort function : \n");
    print(vetor, n);
    printf("Rodou em %.20fs\n", (float)(end - begin) / CLOCKS_PER_SEC);

    printf("\n\n");
    seed(vetor, n);

    printf("Este eh o vetor nao ordenado : \n");
    print(vetor, n);
    printf("\n");

    begin = clock();
    for(int i =0; i<50000;i++){
        qsort(vetor, n, sizeof (float), sort);
    }
    end = clock();


    printf("Este eh o vetor ordenado pelo qsort : \n");
    print(vetor, n);
    printf("\n");

    printf("Rodou em %.20fs\n", (float)(end - begin) / CLOCKS_PER_SEC);





    free(vetor);
    return 0;
}
